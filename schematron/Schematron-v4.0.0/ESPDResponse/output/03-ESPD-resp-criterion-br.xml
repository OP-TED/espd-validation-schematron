<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<svrl:schematron-output xmlns:schold="http://www.ascc.net/xml/schematron"
                        xmlns:iso="http://purl.oclc.org/dsdl/schematron"
                        xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
                        xmlns:espd="urn:oasis:names:specification:ubl:schema:xsd:QualificationApplicationResponse-2"
                        xmlns:xs="http://www.w3.org/2001/XMLSchema"
                        xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2"
                        xmlns:ext="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2"
                        xmlns:espd-req="urn:oasis:names:specification:ubl:schema:xsd:QualificationApplicationRequest-2"
                        xmlns:fn="http://www.w3.org/2005/xpath-functions"
                        xmlns:espd-resp="urn:oasis:names:specification:ubl:schema:xsd:QualificationApplicationResponse-2"
                        xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                        xmlns:xhtml="http://www.w3.org/1999/xhtml"
                        title="ESPD Response Criterion Business Rules"
                        schemaVersion=""><!--   
		   
		   
		 --><svrl:ns-prefix-in-attribute-values uri="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
                                       prefix="cac"/>
   <svrl:ns-prefix-in-attribute-values uri="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2"
                                       prefix="cbc"/>
   <svrl:ns-prefix-in-attribute-values uri="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2"
                                       prefix="ext"/>
   <svrl:ns-prefix-in-attribute-values uri="urn:oasis:names:specification:ubl:schema:xsd:QualificationApplicationResponse-2"
                                       prefix="espd"/>
   <svrl:ns-prefix-in-attribute-values uri="http://www.w3.org/2005/xpath-functions" prefix="fn"/>
   <svrl:active-pattern document="file:/C:/Users/STOICDR/Documents/espd-validation-schematron/schematron/Schematron-v4.0.0/ESPDResponse/../common/xml/ESPD-Response-BASE.xml"
                        id="BR-RESP-CRI"
                        name="BR-RESP-CRI"/>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 1)"
                       id="BR-TCR-06-01"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][1]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty'][1]">
      <svrl:text>As the response 'C1_EG_crime-org/QG1/Q1' is TRUE and the property group is codified as ONTRUE, 'cbc:ID = C1_EG_crime-org/QG1/QSG1/Q1' must be answered as well.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][1]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty'][1]/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C1_EG_crime-org/QG1/QSG1/Q1') has '2' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 1)"
                       id="BR-TCR-06-01"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][1]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty'][2]">
      <svrl:text>As the response 'C1_EG_crime-org/QG1/Q1' is TRUE and the property group is codified as ONTRUE, 'cbc:ID = C1_EG_crime-org/QG1/QSG1/Q2' must be answered as well.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][1]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty'][2]/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C1_EG_crime-org/QG1/QSG1/Q2') has '2' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 1)"
                       id="BR-TCR-06-01"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][1]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty'][3]">
      <svrl:text>As the response 'C1_EG_crime-org/QG1/Q1' is TRUE and the property group is codified as ONTRUE, 'cbc:ID = C1_EG_crime-org/QG1/QSG1/Q3' must be answered as well.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][1]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty'][3]/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C1_EG_crime-org/QG1/QSG1/Q3') has '2' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 1)"
                       id="BR-TCR-06-01"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][1]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty'][4]">
      <svrl:text>As the response 'C1_EG_crime-org/QG1/Q1' is TRUE and the property group is codified as ONTRUE, 'cbc:ID = C1_EG_crime-org/QG1/QSG1/Q4' must be answered as well.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][1]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty'][4]/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C1_EG_crime-org/QG1/QSG1/Q4') has '2' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][1]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='TenderingCriterionProperty']/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C1_EG_crime-org/QG1/QSG1/QSG1/Q1') has '2' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 1)"
                       id="BR-TCR-06-01"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][1]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C1_EG_crime-org/QG1/QSG1/QSG1/Q1' is TRUE and the property group is codified as ONTRUE, 'cbc:ID = C1_EG_crime-org/QG1/QSG1/QSG1/QSG1/Q1' must be answered as well.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][1]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C1_EG_crime-org/QG1/QSG1/QSG1/QSG1/Q1') has '2' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][1]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][2]/*[local-name()='TenderingCriterionProperty']/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C1_EG_crime-org/QG1/QSG1/QSG2/Q1') has '2' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 1)"
                       id="BR-TCR-06-01"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][1]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][2]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C1_EG_crime-org/QG1/QSG1/QSG2/Q1' is TRUE and the property group is codified as ONTRUE, 'cbc:ID = C1_EG_crime-org/QG1/QSG1/QSG2/QSG1/Q1' must be answered as well.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][1]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][2]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C1_EG_crime-org/QG1/QSG1/QSG2/QSG1/Q1') has '2' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][25]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='TenderingCriterionProperty']/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C25_SC_prof-regist/RG1/RSG1/QSG1/Q1') has '4' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][25]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C25_SC_prof-regist/RG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C25_SC_prof-regist/RG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][25]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C25_SC_prof-regist/RG1/RSG1/QSG1/QSG1/Q1') has '4' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 1)"
                       id="BR-TCR-06-01"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][25]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty'][1]">
      <svrl:text>As the response 'C25_SC_prof-regist/RG1/RSG1/QSG1/QSG1/Q1' is TRUE and the property group is codified as ONTRUE, 'cbc:ID = C25_SC_prof-regist/RG1/RSG1/QSG1/QSG1/QSG1/Q1' must be answered as well.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][25]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty'][1]/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C25_SC_prof-regist/RG1/RSG1/QSG1/QSG1/QSG1/Q1') has '4' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 1)"
                       id="BR-TCR-06-01"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][25]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty'][2]">
      <svrl:text>As the response 'C25_SC_prof-regist/RG1/RSG1/QSG1/QSG1/Q1' is TRUE and the property group is codified as ONTRUE, 'cbc:ID = C25_SC_prof-regist/RG1/RSG1/QSG1/QSG1/QSG1/Q2' must be answered as well.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][25]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty'][2]/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C25_SC_prof-regist/RG1/RSG1/QSG1/QSG1/QSG1/Q2') has '4' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][25]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][2]/*[local-name()='TenderingCriterionProperty']/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C25_SC_prof-regist/RG1/RSG1/QSG2/Q1') has '4' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 1)"
                       id="BR-TCR-06-01"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][25]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][2]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C25_SC_prof-regist/RG1/RSG1/QSG2/Q1' is TRUE and the property group is codified as ONTRUE, 'cbc:ID = C25_SC_prof-regist/RG1/RSG1/QSG2/QSG1/Q1' must be answered as well.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][25]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][2]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='TenderingCriterionProperty']/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C25_SC_prof-regist/RG1/RSG1/QSG2/QSG1/Q1') has '4' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][25]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][2]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][3]/*[local-name()='TenderingCriterionProperty']/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C25_SC_prof-regist/RG1/RSG1/QSG2/QSG3/Q1') has '4' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 1)"
                       id="BR-TCR-06-01"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][25]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][2]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][3]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C25_SC_prof-regist/RG1/RSG1/QSG2/QSG3/Q1' is TRUE and the property group is codified as ONTRUE, 'cbc:ID = C25_SC_prof-regist/RG1/RSG1/QSG2/QSG3/QSG1/Q1' must be answered as well.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][25]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][2]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][3]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C25_SC_prof-regist/RG1/RSG1/QSG2/QSG3/QSG1/Q1') has '4' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][26]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C26_SC_trade-regist/RG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C26_SC_trade-regist/RG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][27]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C27_SC_authorisation/RG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C27_SC_authorisation/RG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][28]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C28_SC_membership/RG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C28_SC_membership/RG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][29]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C29_SC_gen-year-to/RG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C29_SC_gen-year-to/RG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][30]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C30_SC_aver-year-to/RG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C30_SC_aver-year-to/RG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][31]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C31_SC_spec-aver-to/RG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C31_SC_spec-aver-to/RG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][32]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='TenderingCriterionProperty']/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C32_SC_spec-year-to/RG1/RSG1/QSG1/Q1') has '2' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][32]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C32_SC_spec-year-to/RG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C32_SC_spec-year-to/RG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][32]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C32_SC_spec-year-to/RG1/RSG1/QSG1/QSG1/Q1') has '2' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 1)"
                       id="BR-TCR-06-01"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][32]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty'][1]">
      <svrl:text>As the response 'C32_SC_spec-year-to/RG1/RSG1/QSG1/QSG1/Q1' is TRUE and the property group is codified as ONTRUE, 'cbc:ID = C32_SC_spec-year-to/RG1/RSG1/QSG1/QSG1/QSG1/Q1' must be answered as well.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][32]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty'][1]/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C32_SC_spec-year-to/RG1/RSG1/QSG1/QSG1/QSG1/Q1') has '2' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 1)"
                       id="BR-TCR-06-01"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][32]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty'][2]">
      <svrl:text>As the response 'C32_SC_spec-year-to/RG1/RSG1/QSG1/QSG1/Q1' is TRUE and the property group is codified as ONTRUE, 'cbc:ID = C32_SC_spec-year-to/RG1/RSG1/QSG1/QSG1/QSG1/Q2' must be answered as well.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][32]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty'][2]/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C32_SC_spec-year-to/RG1/RSG1/QSG1/QSG1/QSG1/Q2') has '2' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][32]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][2]/*[local-name()='TenderingCriterionProperty'][1]/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C32_SC_spec-year-to/RG1/RSG1/QSG2/Q1') has '7' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][32]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][2]/*[local-name()='TenderingCriterionProperty'][2]/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C32_SC_spec-year-to/RG1/RSG1/QSG2/Q2') has '7' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][32]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][2]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C32_SC_spec-year-to/RG1/RSG1/QSG2/QSG1/Q1') has '7' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 1)"
                       id="BR-TCR-06-01"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][32]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][2]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C32_SC_spec-year-to/RG1/RSG1/QSG2/QSG1/Q1' is TRUE and the property group is codified as ONTRUE, 'cbc:ID = C32_SC_spec-year-to/RG1/RSG1/QSG2/QSG1/QSG1/Q1' must be answered as well.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][32]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][2]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C32_SC_spec-year-to/RG1/RSG1/QSG2/QSG1/QSG1/Q1') has '7' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][32]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][3]/*[local-name()='TenderingCriterionProperty']/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C32_SC_spec-year-to/RG1/RSG1/QSG3/Q1') has '2' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][32]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][3]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C32_SC_spec-year-to/RG1/RSG1/QSG3/QSG1/Q1') has '2' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 1)"
                       id="BR-TCR-06-01"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][32]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][3]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C32_SC_spec-year-to/RG1/RSG1/QSG3/QSG1/Q1' is TRUE and the property group is codified as ONTRUE, 'cbc:ID = C32_SC_spec-year-to/RG1/RSG1/QSG3/QSG1/QSG1/Q1' must be answered as well.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="count($responseIDs) &lt;= 1" id="BR-TCR-01-03" flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][32]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][3]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']/*[local-name()='ID']">
      <svrl:text>The criterion property ('cac:TenderingCriterionProperty/cbc:ID' = 'C32_SC_spec-year-to/RG1/RSG1/QSG3/QSG1/QSG1/Q1') has '2' responses.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][33]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][2]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C34_SC_finan-rat/RG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C34_SC_finan-rat/RG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][34]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C35_SC_indem-insu/RG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C35_SC_indem-insu/RG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][39]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C40_SC_qual-cont-tech/RG1/RSG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C40_SC_qual-cont-tech/RG1/RSG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][40]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C41_SC_work-tech/RG1/RSG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C41_SC_work-tech/RG1/RSG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][41]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C42_SC_qual-facil/RG1/RSG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C42_SC_qual-facil/RG1/RSG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][42]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C43_SC_research-fac/RG1/RSG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C43_SC_research-fac/RG1/RSG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][43]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C44_SC_chain-manage/RG1/RSG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C44_SC_chain-manage/RG1/RSG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][44]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C45_SC_envir-measure/RG1/RSG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C45_SC_envir-measure/RG1/RSG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][45]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C46_SC_tech-equip/RG1/RSG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C46_SC_tech-equip/RG1/RSG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][46]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C47_SC_qualification/RG1/RSG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C47_SC_qualification/RG1/RSG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][47]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C48_SC_spec-req-check/RG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C48_SC_spec-req-check/RG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][48]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C49_SC_manage-staff/RG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C49_SC_manage-staff/RG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][49]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C50_SC_year-manpower/RG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C50_SC_year-manpower/RG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][50]/*[local-name()='TenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C51_SC_suncont-port/QG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C51_SC_suncont-port/QG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][51]/*[local-name()='TenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C52_SC_wo-autent/QG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C52_SC_wo-autent/QG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][52]/*[local-name()='TenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C53_SC_w-autent/QG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C53_SC_w-autent/QG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][53]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C54_SC_qa-certif-inst/RG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C54_SC_qa-certif-inst/RG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][53]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][2]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C54_SC_qa-certif-inst/RG1/RSG1/QSG2/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C54_SC_qa-certif-inst/RG1/RSG1/QSG2/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][54]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C55_SC_qu-certif-indep/RG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C55_SC_qu-certif-indep/RG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][54]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][2]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C55_SC_qu-certif-indep/RG1/RSG1/QSG2/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C55_SC_qu-certif-indep/RG1/RSG1/QSG2/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][55]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C56_SC_envir-certif-indep/RG1/RSG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C56_SC_envir-certif-indep/RG1/RSG1/QSG1/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][55]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][2]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C56_SC_envir-certif-indep/RG1/RSG1/QSG2/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C56_SC_envir-certif-indep/RG1/RSG1/QSG2/QSG1/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="not($parentTrueResponse) or ($parentTrueResponse and count(key('CriterionResponseType', cbc:ID)) = 0)"
                       id="BR-TCR-07-02"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterion'][57]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][1]/*[local-name()='SubsidiaryTenderingCriterionPropertyGroup'][2]/*[local-name()='TenderingCriterionProperty']">
      <svrl:text>As the response 'C58_OT_registered/QG1/QSG1/Q1' is TRUE but the property group is codified as ONFALSE, 'cbc:ID = C58_OT_registered/QG1/QSG1/QSG2/Q1' must not be answered.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][10]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C1_EG_crime-org/QG1/QSG1/QSG2/QSG1/Q1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][18]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C1_EG_crime-org/QG1/QSG1/QSG2/QSG1/Q1/R2/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][28]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C2_EG_corruption/QG1/QSG1/QSG2/QSG1/Q1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][38]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C3_EG_fraud/QG1/QSG1/QSG2/QSG1/Q1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][48]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C4_EG_terr-offence/QG1/QSG1/QSG2/QSG1/Q1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][58]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C5_EG_finan-laund/QG1/QSG1/QSG2/QSG1/Q1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][68]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C6_EG_human-traffic/QG1/QSG1/QSG2/QSG1/Q1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][78]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C7_EG_tax-pay/RG1/QSG1/QSG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][88]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C8_EG_socsec-pay/RG1/QSG1/QSG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][94]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C9_EG_envir-law/QG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][100]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C10_EG_socsec-law/QG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][106]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C11_EG_labour-law/QG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][112]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C12_EG_bankruptcy/QG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][118]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C13_EG_insolvency/QG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][124]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C14_EG_cred-arran/QG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][130]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C15_EG_bankr-nat/QG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][136]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C16_EG_liq-admin/QG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][142]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C17_EG_susp-act/QG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][149]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C18_EG_prof-misconduct/QG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][156]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C19_EG_distorsion/QG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][161]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C20_EG_partic-confl/QG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][166]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C21_EG_prep-confl/QG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][173]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C22_EG_sanction/QG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][177]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C23_EG_misrepresent/QG1/QSG1/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][180]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C24_EG_nati-ground/QG1/QSG1/QSG1/QSG1/Q1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][189]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C25_SC_prof-regist/RG1/RSG1/QSG2/QSG3/QSG1/Q1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][197]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C25_SC_prof-regist/RG1/RSG1/QSG2/QSG3/QSG1/Q1/R1/R2/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][205]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C25_SC_prof-regist/RG1/RSG1/QSG2/QSG3/QSG1/Q1/R2/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][213]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C25_SC_prof-regist/RG1/RSG1/QSG2/QSG3/QSG1/Q1/R2/R2/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][222]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C26_SC_trade-regist/RG1/RSG1/QSG2/QSG3/QSG1/Q1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][233]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C27_SC_authorisation/RG1/RSG1/QSG2/QSG3/QSG1/Q1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][244]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C28_SC_membership/RG1/RSG1/QSG2/QSG3/QSG1/Q1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][253]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C29_SC_gen-year-to/RG1/RSG1/QSG2/QSG1/QSG1/Q1/R1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][256]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C29_SC_gen-year-to/RG1/RSG1/QSG3/QSG1/QSG1/Q1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][265]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C30_SC_aver-year-to/RG1/RSG1/QSG2/QSG1/QSG1/Q1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][268]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C30_SC_aver-year-to/RG1/RSG1/QSG3/QSG1/QSG1/Q1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][277]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C31_SC_spec-aver-to/RG1/RSG1/QSG2/QSG1/QSG1/Q1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][280]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C31_SC_spec-aver-to/RG1/RSG1/QSG3/QSG1/QSG1/Q1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][289]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C32_SC_spec-year-to/RG1/RSG1/QSG2/QSG1/QSG1/Q1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][293]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C32_SC_spec-year-to/RG1/RSG1/QSG2/QSG1/QSG1/Q1/R1/R2/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][297]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C32_SC_spec-year-to/RG1/RSG1/QSG2/QSG1/QSG1/Q1/R1/R3/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][300]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C32_SC_spec-year-to/RG1/RSG1/QSG3/QSG1/QSG1/Q1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][308]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C32_SC_spec-year-to/RG1/RSG1/QSG2/QSG1/QSG1/Q1/R2/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][312]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C32_SC_spec-year-to/RG1/RSG1/QSG2/QSG1/QSG1/Q1/R2/R2/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][316]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C32_SC_spec-year-to/RG1/RSG1/QSG2/QSG1/QSG1/Q1/R2/R3/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][320]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C32_SC_spec-year-to/RG1/RSG1/QSG2/QSG1/QSG1/Q1/R2/R4/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][323]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C32_SC_spec-year-to/RG1/RSG1/QSG3/QSG1/QSG1/Q1/R2/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][330]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C34_SC_finan-rat/RG1/RSG1/QSG2/QSG1/QSG1/Q1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][340]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C35_SC_indem-insu/RG1/RSG1/QSG2/QSG1/QSG1/Q1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][344]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C36_SC_finan-requ/RG1/RSG1/RSG1/RSG1/QSG1/QSG1/QSG1/Q1/R1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][347]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C36_SC_finan-requ/RG1/RSG1/RSG1/RSG2/QSG1/QSG1/QSG1/Q1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][350]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = '/C36_SC_finan-requ/RG1/RSG1/RSG1/RSG3/QSG1/QSG1/QSG1/Q1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][363]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C37_SC_work-perform/RG1/RSG1/QSG1/QSG1/QSG2/QSG1/Q1/R1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][376]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C38_SC_supply-perform/RG1/RSG1/QSG1/QSG1/QSG2/QSG1/Q1/R1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][389]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C39_SC_service-perform/RG1/RSG1/QSG1/QSG1/QSG2/QSG1/Q1/R1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][402]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'http://dod gov usa/sat/it/soft/prk?id=1121233/C40_SC_qual-cont-tech/RG1/RSG1/RSG1/QSG2/QSG1/QSG1/QSG1/Q1/R1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][407]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C40_SC_qual-cont-tech/RG1/RSG1/RSG1/QSG3/QSG1/QSG1/QSG1/Q1/R1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][420]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'http://dod gov usa/sat/it/soft/prk?id=1121233/C41_SC_work-tech/RG1/RSG1/RSG1/QSG2/QSG1/QSG1/QSG1/Q1/R1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][425]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C41_SC_work-tech/RG1/RSG1/RSG1/QSG3/QSG1/QSG1/QSG1/Q1/R1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][433]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C42_SC_qual-facil/RG1/RSG1/RSG1/QSG2/QSG1/QSG1/Q1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][441]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C43_SC_research-fac/RG1/RSG1/RSG1/QSG2/QSG1/QSG1/Q1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][449]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C44_SC_chain-manage/RG1/RSG1/RSG1/QSG2/QSG1/QSG1/Q1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][457]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C45_SC_envir-measure/RG1/RSG1/RSG1/QSG2/QSG1/QSG1/Q1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][465]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C46_SC_tech-equip/RG1/RSG1/RSG1/QSG2/QSG1/QSG1/Q1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][481]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C47_SC_qualification/RG1/RSG1/RSG1/QSG2/QSG1/QSG1/QSG1/Q1/R1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][489]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C48_SC_spec-req-check/RG1/RSG1/QSG2/QSG1/QSG1/Q1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][498]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C49_SC_manage-staff/RG1/RSG1/QSG2/QSG1/QSG1/Q1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][507]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C50_SC_year-manpower/RG1/RSG1/QSG2/QSG1/QSG1/Q1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][515]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C51_SC_suncont-port/QG2/QSG1/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][523]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C52_SC_wo-autent/QG2/QSG1/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][531]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C53_SC_w-autent/QG2/QSG1/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][540]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C54_SC_qa-certif-inst/RG1/RSG1/QSG2/QSG2/QSG1/Q1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][549]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C55_SC_qu-certif-indep/RG1/RSG1/QSG2/QSG2/QSG1/Q1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][558]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C56_SC_envir-certif-indep/RG1/RSG1/QSG2/QSG2/QSG1/Q1/R1/R1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][563]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C57_OT_shelt-worksh/QG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][572]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C58_OT_registered/QG1/QSG1/QSG3/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][578]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C59_OT_eo-group/QG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][583]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C60_OT_relied/QG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][588]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C61_OT_subco-ent/QG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][592]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C63_OT_staff-red/QG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="((cac:EvidenceSupplied) and (count(key('EvidenceID', cac:EvidenceSupplied/cbc:ID)) = 1)) or not(cac:EvidenceSupplied)"
                       id="BR-TCR-09"
                       flag="fatal"
                       location="/*[local-name()='QualificationApplicationResponse']/*[local-name()='TenderingCriterionResponse'][597]">
      <svrl:text>The evidence response ('cac:EvidenceSupplied/cbc:ID' = 'EVIDENCE-ID/C65_OT_sme/QG1/QSG2/QSG1/Q1/R1/RES') does not have a corss-reference to the evidence identifier ('cac:Evidence/cbc:ID').</svrl:text>
   </svrl:failed-assert>
</svrl:schematron-output>