<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<svrl:schematron-output xmlns:schold="http://www.ascc.net/xml/schematron"
                        xmlns:iso="http://purl.oclc.org/dsdl/schematron"
                        xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
                        xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                        xmlns:xs="http://www.w3.org/2001/XMLSchema"
                        xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2"
                        xmlns:ext="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2"
                        xmlns:espd-req="urn:oasis:names:specification:ubl:schema:xsd:QualificationApplicationRequest-2"
                        xmlns:espd-resp="urn:oasis:names:specification:ubl:schema:xsd:QualificationApplicationResponse-2"
                        xmlns:xhtml="http://www.w3.org/1999/xhtml"
                        title=""
                        schemaVersion=""><!--   
		   
		   
		 --><svrl:active-pattern document="file:/C:/Users/hricolor/Documents/GitHub/SEMBU-ESPD/schematron/Schematron-v3.1.0/ESPDRequest/../common/xml/ESPD-Request-BASE.xml"
                        id="code-list-values"
                        name="code-list-values"/>
   <svrl:failed-assert test="( false() or ( (contains(translate('&#127;ESPD-EDMv2.0.0-REGULATED&#127;ESPD-EDMv2.0.0-SELFCONTAINED&#127;ESPD-EDMv2.1.0-REGULATED&#127;ESPD-EDMv2.1.0-SELFCONTAINED&#127;ESPD-EDMv1.0.2&#127;ESPD-EDMv2.1.1-BASIC&#127;ESPD-EDMv2.1.1-EXTENDED&#127;ESPD-EDMv3.0.0&#127;ESPD-EDMv3.0.1&#127;','ABCDEFGHIJKLMNOPQRSTUVWXYZ','abcdefghijklmnopqrstuvwxyz'),concat('&#127;',translate(.,'ABCDEFGHIJKLMNOPQRSTUVWXYZ','abcdefghijklmnopqrstuvwxyz'),'&#127;')) ) ) )"
                       location="/*[local-name()='QualificationApplicationRequest']/*[local-name()='ProfileExecutionID']">
      <svrl:text>Invalid value: 'ESPD-EDM-V3.1.0' for the element 'cbc:ProfileExecutionID'.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="( false() or ( (contains(translate('&#127;AND&#127;ALB&#127;AUT&#127;BIH&#127;BEL&#127;BGR&#127;BLR&#127;BYS&#127;CHE&#127;CSK&#127;SCG&#127;CYP&#127;CZE&#127;DDR&#127;DNK&#127;EST&#127;GRC&#127;ESP&#127;FIN&#127;FRO&#127;FRA&#127;GGY&#127;GIB&#127;GRL&#127;HRV&#127;HUN&#127;IRL&#127;IMN&#127;ISL&#127;ITA&#127;JEY&#127;LIE&#127;LTU&#127;LUX&#127;LVA&#127;MCO&#127;MDA&#127;MNE&#127;MKD&#127;MLT&#127;NLD&#127;NOR&#127;POL&#127;PRT&#127;ROU&#127;SRB&#127;RUS&#127;SWE&#127;SVN&#127;SVK&#127;SMR&#127;SUN&#127;TUR&#127;UKR&#127;GBR&#127;VAT&#127;YUG&#127;DEU&#127;ALA&#127;DZA&#127;ASM&#127;AGO&#127;AIA&#127;ATA&#127;ATG&#127;ARG&#127;ARM&#127;ABW&#127;AUS&#127;AZE&#127;BHS&#127;BHR&#127;BGD&#127;BRB&#127;BLZ&#127;BEN&#127;BMU&#127;BTN&#127;BOL&#127;BWA&#127;BVT&#127;BRA&#127;IOT&#127;VGB&#127;BRN&#127;BFA&#127;BDI&#127;KHM&#127;CMR&#127;CAN&#127;CPV&#127;CYM&#127;CAF&#127;TCD&#127;CHL&#127;CHN&#127;CXR&#127;CPT&#127;CCK&#127;COL&#127;COM&#127;COG&#127;COK&#127;CRI&#127;CIV&#127;CUB&#127;COD&#127;DJI&#127;DMA&#127;DOM&#127;TLS&#127;ECU&#127;EGY&#127;SLV&#127;GNQ&#127;ERI&#127;ETH&#127;FLK&#127;FJI&#127;GUF&#127;PYF&#127;ATF&#127;GAB&#127;GMB&#127;GEO&#127;GHA&#127;GRD&#127;GLP&#127;GUM&#127;GTM&#127;GIN&#127;GNB&#127;GUY&#127;HTI&#127;HMD&#127;HND&#127;HKG&#127;IND&#127;IDN&#127;IRN&#127;IRQ&#127;ISR&#127;JAM&#127;JPN&#127;JOR&#127;KAZ&#127;KEN&#127;KIR&#127;KWT&#127;KGZ&#127;LAO&#127;LBN&#127;LSO&#127;LBR&#127;LBY&#127;MAC&#127;MDG&#127;MWI&#127;MYS&#127;MDV&#127;MLI&#127;MHL&#127;MTQ&#127;MRT&#127;MUS&#127;MYT&#127;MEX&#127;FSM&#127;MNG&#127;MSR&#127;MAR&#127;MOZ&#127;MMR&#127;NAM&#127;NRU&#127;NPL&#127;ANT&#127;NCL&#127;NZL&#127;NIC&#127;NER&#127;NGA&#127;NIU&#127;NFK&#127;PRK&#127;MNP&#127;OMN&#127;PAK&#127;PLW&#127;PSE&#127;PAN&#127;PNG&#127;PRY&#127;PER&#127;PHL&#127;PCN&#127;PRI&#127;QAT&#127;REU&#127;RWA&#127;BLM&#127;SHN&#127;KNA&#127;LCA&#127;MAF&#127;SPM&#127;VCT&#127;WSM&#127;STP&#127;SAU&#127;SEN&#127;SYC&#127;SLE&#127;SGP&#127;SLB&#127;SOM&#127;ZAF&#127;SGS&#127;KOR&#127;LKA&#127;SDN&#127;SUR&#127;SJM&#127;SWZ&#127;SYR&#127;TWN&#127;TJK&#127;TZA&#127;THA&#127;TGO&#127;TKL&#127;TON&#127;TTO&#127;TUN&#127;TKM&#127;TCA&#127;TUV&#127;UGA&#127;ARE&#127;USA&#127;UMI&#127;URY&#127;VIR&#127;UZB&#127;VUT&#127;VEN&#127;VNM&#127;WLF&#127;ESH&#127;YEM&#127;ZMB&#127;ZWE&#127;AFG&#127;BUR&#127;1A0&#127;HVO&#127;ZR0&#127;AFI&#127;ATB&#127;CTE&#127;DHY&#127;ATN&#127;TMP&#127;FXX&#127;GEL&#127;JTN&#127;MID&#127;NTZ&#127;NHB&#127;PCI&#127;PCZ&#127;SKM&#127;RHO&#127;PUS&#127;VDR&#127;WAK&#127;FQ0&#127;YMD&#127;BES&#127;CUW&#127;SXM&#127;SSD&#127;EUR&#127;','ABCDEFGHIJKLMNOPQRSTUVWXYZ','abcdefghijklmnopqrstuvwxyz'),concat('&#127;',translate(.,'ABCDEFGHIJKLMNOPQRSTUVWXYZ','abcdefghijklmnopqrstuvwxyz'),'&#127;')) ) ) )"
                       location="/*[local-name()='QualificationApplicationRequest']/*[local-name()='ContractingParty']/*[local-name()='Party']/*[local-name()='PostalAddress']/*[local-name()='Country']/*[local-name()='IdentificationCode']">
      <svrl:text>Invalid value: 'asdasdas' for the element 'cac:Country/cbc:IdentificationCode'.</svrl:text>
   </svrl:failed-assert>
   <svrl:failed-assert test="( false() or ( (contains(translate('&#127;AMOUNT&#127;CODE&#127;CODE_COUNTRY&#127;DATE&#127;DESCRIPTION&#127;EVIDENCE_IDENTIFIER&#127;INDICATOR&#127;PERCENTAGE&#127;PERIOD&#127;QUANTITY_INTEGER&#127;QUANTITY_YEAR&#127;QUANTITY&#127;NONE&#127;IDENTIFIER&#127;URL&#127;MAXIMUM_AMOUNT&#127;MINIMUM_AMOUNT&#127;MAXIMUM_VALUE_NUMERIC&#127;MINIMUM_VALUE_NUMERIC&#127;TRANSLATION_TYPE_CODE&#127;CERTIFICATION_LEVEL_DESCRIPTION&#127;COPY_QUALITY_TYPE_CODE&#127;TIME&#127;CODE_BOOLEAN&#127;ECONOMIC_OPERATOR_IDENTIFIER&#127;QUAL_IDENTIFIER&#127;','ABCDEFGHIJKLMNOPQRSTUVWXYZ','abcdefghijklmnopqrstuvwxyz'),concat('&#127;',translate(.,'ABCDEFGHIJKLMNOPQRSTUVWXYZ','abcdefghijklmnopqrstuvwxyz'),'&#127;')) ) ) )"
                       location="/*[local-name()='QualificationApplicationRequest']/*[local-name()='TenderingCriterion'][29]/*[local-name()='TenderingCriterionPropertyGroup']/*[local-name()='TenderingCriterionProperty'][2]/*[local-name()='ValueDataTypeCode']">
      <svrl:text>Invalid value: 'CHECKBOX_TRUE' for the element 'cac:TenderingCriterionProperty/cbc:ValueDataTypeCode'.</svrl:text>
   </svrl:failed-assert>
</svrl:schematron-output>